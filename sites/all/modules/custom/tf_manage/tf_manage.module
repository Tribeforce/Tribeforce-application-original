<?php
// Very useful: http://drupal.org/project/1158878

function tf_manage_init() {
  drupal_add_library('system', 'ui.draggable');
}

function tf_manage_menu() {
  $items = array();

  $items['manage'] = array(
    'title' => 'Manage',
    'type' => MENU_CALLBACK,
    'page callback' => 'manage',
    'file' => 'overview.inc',
    'access arguments' => array('access tf_manage'),
  );

  $items['manage/person'] = array(
    'title' => t('Person Details'),
    'type' => MENU_CALLBACK,
    'page callback' => 'person_details',
    'file' => 'person_details.inc',
    'access callback' => 'tf_is_own',
    'access arguments' => array(2),
  );

  $items['manage/evaluate'] = array(
    'title' => 'Evaluate',
    'type' => MENU_CALLBACK,
    'page callback' => 'add_evaluation',
    'access arguments' => array('access content'),
    'file' => 'person_details.inc',
    'access callback' => 'tf_is_own',
    'access arguments' => array(2),
  );

  $items['manage/person/%/edit'] = array(
    'title' => t('Edit Person'),
    'type' => MENU_CALLBACK,
    'page callback' => 'person_edit',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'person_edit.inc',
    'access callback' => 'tf_is_own',
    'access arguments' => array(2),
  );

  return $items;
}




/*
 Queries
*/
// TODO: Improve performance
function get_enriched_persons() {
  $enriched_persons = array();
  $person_types = tf_get_my_persons();

  foreach($person_types as $person_type => $persons) {
    foreach($persons as $key => $person) {
      $enriched_persons[$person_type][$key] = get_enriched_person($person);
    }
  }

  return $enriched_persons;
}


// Returns and array with keys: person and roles
//   person: person node
//   roles: array of role nodes (keyed by role-<nid>)
function get_enriched_person($person) {
  $ret = $person;
  $ret['roles'] = array();
  $ret['skills'] = array();
  $ret['talents'] = array();
  $ret['remarks'] = array();
  $ret['evaluations'] = array();


  if(!empty($person['node']->field_role_ref['und'])) {
    $nids = flatten_nids($person['node']->field_role_ref['und']);

    foreach($nids as $nid) {
      $full_role = get_full_role($nid);

      // Enrich with the roles
      $ret['roles']["role-$nid"]['node'] = $full_role['node'];

      // Enrich with the skills
      foreach($full_role['skills'] as $skill) {
        $ret['skills']['skill-' . $skill['node']->nid] = $skill;
      }

      // Enrich with the business talents
      foreach($full_role['talents']['business'] as $talent) {
        $ret['talents']['talent-' . $talent['node']->nid] = $talent;
      }

      // Enrich with the behavioral talents
      foreach($full_role['talents']['behavioral'] as $talent) {
        $ret['talents']['talent-' . $talent['node']->nid] = $talent;
      }
    }
  }

  // Enrich with Remarks
  if(!empty($person['node']->field_remarks_ref['und'])) {
    $nids = flatten_nids($person['node']->field_remarks_ref['und']);
    $ret['remarks'] = node_load_multiple($nids);
  }

  // Enrich with Evaluations
  if(!empty($person['node']->field_evaluations_ref['und'])) {
    $nids = flatten_nids($person['node']->field_evaluations_ref['und']);
    $ret['evaluations'] = node_load_multiple($nids);
  }

  return $ret;
}
